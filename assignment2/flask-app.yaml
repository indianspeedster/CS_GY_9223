apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - name: flask-app
        image: indianspeedster/flask-app:0.0.1
        ports:
        - containerPort: 8200
        livenessProbe:
          httpGet:
            path: /status/healthz
            port: 8200
            host: $(POD_IP)
          initialDelaySeconds: 80
          periodSeconds: 10
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 15
        readinessProbe:
          httpGet:
            path: /status/healthz
            port: 8200
            host: $(POD_IP)
          initialDelaySeconds: 120
          periodSeconds: 10
          timeoutSeconds: 10
        startupProbe:
          httpGet:
            path: /status/healthz
            port: 8200
            host: $(POD_IP)
          failureThreshold: 30
          periodSeconds: 10

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deployment
spec:
  replicas: 1  
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: indianspeedster/mongo-db:1.0.1 
        ports:
        - containerPort: 27017
---
apiVersion: v1
kind: Service
metadata:
  name: app-service
spec:
  selector:
    app: flask-app
  ports:
  - protocol: TCP
    port: 6000  
    targetPort: 8200  
    nodePort: 32500
  type: LoadBalancer  
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
spec:
  selector:
    app: mongodb
  ports:
  - protocol: TCP
    port: 27017
    targetPort: 27017
